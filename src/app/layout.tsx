import './globals.css';
import { Inter } from 'next/font/google';
import { AiOutlineMenu } from 'react-icons/ai';
import { Icon } from '@/icons';
import { AnimateWhileInView, Light, Link } from '@/components';
import { Stars } from './components';

const inter = Inter({ subsets: ['latin'] });

export const metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

const links = [
    {
        text: 'Get Started',
        href: 'https://docs.midjourney.com/',
    },
    {
        text: 'Showcase',
        href: 'https://www.midjourney.com/showcase/recent/',
    },
    {
        text: 'Join the Beta',
        href: 'https://discord.com/invite/midjourney',
    },
    {
        text: 'Sign In',
        href: 'https://discord.com/oauth2/authorize?client_id=936929561302675456&scope=identify%20email%20guilds.members.read%20guilds.join%20role_connections.write&response_type=code&redirect_uri=https%3A%2F%2Fwww.midjourney.com%2Fapi%2Fauth%2Fcallback%2Fdiscord&state=XEjJGSJdBrJmUwr8WBY-PJ47bznxDjwmqoqL6PQNkAA',
    },
];

const footer = [
    {
        title: 'Helpful Links',
        links: [
            {
                text: 'Quick start',
                href: 'https://docs.midjourney.com/docs/quick-start',
            },
            {
                text: 'Subscription Plans',
                href: 'https://docs.midjourney.com/docs/plans',
            },
            {
                text: 'Discord Interface',
                href: 'https://docs.midjourney.com/docs/midjourney-discord',
            },
            {
                text: 'Prompts',
                href: 'https://docs.midjourney.com/docs/prompts',
            },
        ],
    },
    {
        title: 'Legal',
        links: [
            {
                text: 'Terms of Service',
                href: 'https://docs.midjourney.com/docs/terms-of-service',
            },
            {
                text: 'Privacy Policy',
                href: 'https://docs.midjourney.com/docs/privacy-policy',
            },
        ],
    },
    {
        title: 'Company',
        links: [
            {
                text: 'Careers',
                href: 'mailto:careers@midjourney.com',
            },
            {
                text: 'Billing Support',
                href: 'mailto:billing@midjourney.com',
            },
            {
                text: 'Journalist Inquiries',
                href: 'mailto:press@midjourney.com',
            },
        ],
    },
];

export default function RootLayout({ children }: { children: React.ReactNode }) {
    return (
        <html lang="en">
            <body className={inter.className}>
                <div className="flex h-full w-full justify-center px-4 sm:px-8">
                    <div className="flex h-full w-full max-w-7xl flex-col space-y-14">
                        <header className="flex h-16 w-full items-center justify-between">
                            <Icon type="logo" className="h-12 w-12" />
                            <div className="hidden space-x-8 md:flex">
                                {links.map(({ text, href }) => (
                                    <Link href={href} key={text}>
                                        <p>{text}</p>
                                    </Link>
                                ))}
                            </div>
                            <AiOutlineMenu className="flex md:hidden" />
                        </header>
                        <Stars />
                        {children}
                        <footer className="flex w-full flex-col items-center space-y-20 pb-20 pt-32 lg:pt-40">
                            <div className="flex w-full flex-col items-center justify-between space-y-10 lg:flex-row lg:items-start lg:space-y-0">
                                <div>
                                    <p className="text-xl font-bold">Midjourney</p>
                                    <Light variant="large" />
                                </div>
                                <div>
                                    <div className="grid grid-cols-2 gap-10 md:grid-cols-3 md:gap-20">
                                        {footer.map(({ title, links }) => (
                                            <AnimateWhileInView
                                                key={title}
                                                className="flex w-full flex-col items-center space-y-2 lg:items-start"
                                            >
                                                <p className="font-semibold">{title}</p>
                                                {links.map(({ text, href }) => (
                                                    <Link key={text} href={href} variant="ghost">
                                                        {text}
                                                    </Link>
                                                ))}
                                            </AnimateWhileInView>
                                        ))}
                                    </div>
                                    <Light variant="large" />
                                </div>
                            </div>
                            <p className="text-white/60">Â© 2023 Midjourney. All rights reserved.</p>
                        </footer>
                    </div>
                </div>
            </body>
        </html>
    );
}
